import { BrowserRouter as Router, Routes, Route } from 'react-router-dom';
import { QueryClient, QueryClientProvider } from '@tanstack/react-query';
import { AuthProvider } from './context/AuthContext';
import ProtectedRoute from './components/auth/ProtectedRoute';

// Pages
import HomePage from './pages/HomePage';
import LoginPage from './pages/LoginPage';
import SignupPage from './pages/SignupPage';
import ProductDetailPage from './pages/ProductDetailPage';
import AuctionDetailPage from './pages/AuctionDetailPage';
import BrowsePage from './pages/BrowsePage';
import CategoryPage from './pages/CategoryPage';
import CartPage from './pages/CartPage';
import NotFoundPage from './pages/NotFoundPage';

// Management Pages
import ManagementDashboard from './pages/management/ManagementDashboard';
import CreateProductPage from './pages/management/CreateProductPage';
import AllProductsPage from './pages/management/AllProductsPage';
import ManageProductPage from './pages/management/ManageProductPage';
import EditProductPage from './pages/management/EditProductPage';

const queryClient = new QueryClient({
  defaultOptions: {
    queries: {
      refetchOnWindowFocus: false,
      retry: 1,
    },
  },
});

function App() {
  return (
    <QueryClientProvider client={queryClient}>
      <AuthProvider>
        <Router>
          <Routes>
            {/* Public Routes */}
            <Route path="/" element={<HomePage />} />
            <Route path="/login" element={<LoginPage />} />
            <Route path="/signup" element={<SignupPage />} />
            <Route path="/product/:id" element={<ProductDetailPage />} />
            <Route path="/auction/:id" element={<AuctionDetailPage />} />
            <Route path="/browse" element={<BrowsePage />} />
            <Route path="/category/:categorySlug" element={<CategoryPage />} />
            <Route path="/cart" element={<CartPage />} />

            {/* Management Routes (Superuser Only) */}
            <Route 
              path="/management" 
              element={
                <ProtectedRoute requireSuperuser={true}>
                  <ManagementDashboard />
                </ProtectedRoute>
              } 
            />
            <Route 
              path="/management/products/new" 
              element={
                <ProtectedRoute requireSuperuser={true}>
                  <CreateProductPage />
                </ProtectedRoute>
              } 
            />
            <Route 
              path="/management/products" 
              element={
                <ProtectedRoute requireSuperuser={true}>
                  <AllProductsPage />
                </ProtectedRoute>
              } 
            />
            <Route 
              path="/management/products/:id/edit" 
              element={
                <ProtectedRoute requireSuperuser={true}>
                  <EditProductPage />
                </ProtectedRoute>
              } 
            />
            <Route 
              path="/management/products/:id" 
              element={
                <ProtectedRoute requireSuperuser={true}>
                  <ManageProductPage />
                </ProtectedRoute>
              } 
            />

            {/* 404 */}
            <Route path="*" element={<NotFoundPage />} />
          </Routes>
        </Router>
      </AuthProvider>
    </QueryClientProvider>
  );
}

export default App;
