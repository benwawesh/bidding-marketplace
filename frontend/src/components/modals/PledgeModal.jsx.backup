import { useState } from 'react';
import { useMutation } from '@tanstack/react-query';
import axios from '../../api/axios';
import { formatCurrency } from '../../utils/helpers';

export default function PledgeModal({ auctionId, roundId, minimumPledge, onSuccess, onClose }) {
  const [pledgeAmount, setPledgeAmount] = useState('');

  const pledgeMutation = useMutation({
    mutationFn: async (amount) => {
      const response = await axios.post('http://127.0.0.1:8000/api/bids/', {
        auction: auctionId,
        round: roundId,
        pledge_amount: amount,
      });
      return response.data;
    },
    onSuccess: () => {
      alert('âœ… Bid placed successfully!');
      onSuccess();
    },
    onError: (error) => {
      alert('Failed to place bid: ' + (error.response?.data?.error || error.message));
    },
  });

  const handleSubmit = (e) => {
    e.preventDefault();
    
    const amount = parseFloat(pledgeAmount);
    
    if (isNaN(amount) || amount <= 0) {
      alert('Please enter a valid amount');
      return;
    }
    
    if (amount < minimumPledge) {
      alert(`Minimum pledge is ${formatCurrency(minimumPledge)}`);
      return;
    }

    pledgeMutation.mutate(amount);
  };

  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4">
      <div className="bg-white rounded-lg max-w-md w-full p-6">
        <h2 className="text-2xl font-bold text-gray-900 mb-4">Place Your Bid</h2>
        
        <div className="mb-6">
          <p className="text-gray-600 mb-4">
            Enter the amount you want to pledge. The highest pledge wins the auction!
          </p>
          
          <div className="bg-blue-50 border border-blue-200 rounded-lg p-4 mb-4">
            <p className="text-sm text-gray-600 mb-1">Minimum Pledge</p>
            <p className="text-2xl font-bold text-blue-600">{formatCurrency(minimumPledge)}</p>
          </div>

          <form onSubmit={handleSubmit}>
            <div className="mb-4">
              <label className="block text-sm font-semibold text-gray-700 mb-2">
                Your Pledge Amount (KES)
              </label>
              <input
                type="number"
                value={pledgeAmount}
                onChange={(e) => setPledgeAmount(e.target.value)}
                placeholder={`Minimum ${minimumPledge}`}
                min={minimumPledge}
                step="100"
                className="w-full px-4 py-3 border-2 border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-red-500 text-xl font-bold"
                required
              />
              <p className="text-xs text-gray-500 mt-2">
                ðŸ’¡ Tip: Bid higher to increase your chances of winning!
              </p>
            </div>

            <div className="bg-gradient-to-r from-green-50 to-emerald-50 border border-green-200 rounded-lg p-4 mb-4">
              <p className="text-sm font-semibold text-green-900 mb-1">ðŸŽ¯ How Bidding Works</p>
              <ul className="text-xs text-green-800 space-y-1 ml-4 list-disc">
                <li>Enter the maximum amount you're willing to pay</li>
                <li>You only pay if you win the auction</li>
                <li>Highest pledge wins when admin closes the auction</li>
                <li>You can update your bid anytime before closing</li>
              </ul>
            </div>

            <div className="flex gap-3">
              <button
                type="submit"
                disabled={pledgeMutation.isPending}
                className="flex-1 bg-red-600 text-white py-3 rounded-lg font-bold hover:bg-red-700 transition disabled:bg-gray-400"
              >
                {pledgeMutation.isPending ? 'Placing Bid...' : 'ðŸŽ¯ Place Bid'}
              </button>
              
              <button
                type="button"
                onClick={onClose}
                className="px-6 py-3 bg-gray-200 text-gray-700 rounded-lg font-semibold hover:bg-gray-300 transition"
              >
                Cancel
              </button>
            </div>
          </form>
        </div>
      </div>
    </div>
  );
}
